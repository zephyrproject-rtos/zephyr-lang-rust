# Copyright (c) 2024 Linaro LTD
# SPDX-License-Identifier: Apache-2.0

[package]
name = "zephyr"
version = "0.1.0"
edition = "2021"
description = """
Functionality for Rust-based applications that run on Zephyr.
"""

[dependencies]
zephyr-sys = { version = "0.1.0", path = "../zephyr-sys" }

# Although paste is brought in, it is a compile-time macro, and is not linked into the application.
paste = "1.0"

# cfg-if is a compile-time macro as well, to make conditional compilation a bit easier to write.
cfg-if = "1.0"

# The log create is used if the user desires logging, and calls `set_logger()`.
log = "0.4.22"
arrayvec = { version = "0.7.6", default-features = false }

[dependencies.fugit]
version = "0.3.7"

[dependencies.critical-section]
version = "1.1.2"
features = ["restore-state-u32"]

[dependencies.portable-atomic]
version = "1.7.0"
# We assume that the instances where portable atomic must provide its own implementation (target
# does not have atomic instructions), are only single CPU. This is the case currently with Zephyr,
# so this should only match the same implementation.
# features = ["fallback", "unsafe-assume-single-core"]
features = ["fallback", "critical-section"]

# Provides an implementation of Arc that either directs to 'alloc', or implements using portable
# atomic.
[dependencies.portable-atomic-util]
version = "0.2.2"
# Technically, this should only be used if the Rust feature for allocation is defined. But, it
# should be safe to build the crate even if the Rust code doesn't use it because of configs.
features = ["alloc"]

[dependencies.embassy-time-driver]
version = "0.2"
# Someone needs to tell embassy what our clock frequency is.  Until we have support from cmake for
# this, we'll have to leave this up to the app to provide, since it is heavily board specific.
optional = true

[dependencies.embassy-time-queue-utils]
version = "0.1"
optional = true

[dependencies.embassy-sync]
version = "0.6.2"
optional = true

[dependencies.embassy-executor]
version = "0.7.0"
optional = true

# These are needed at build time.
# Whether these need to be vendored is an open question.  They are not
# used by the core Zephyr tree, but are needed by zephyr applications.
[build-dependencies]
zephyr-build = { version = "0.1.0", path = "../zephyr-build" }

[features]
# Provide an implementation of embassy-time-driver.
time-driver = [
  "dep:embassy-time-driver",
  "dep:embassy-time-queue-utils",
  "dep:embassy-sync",
]

# Provide an embassy-based executor that runs on individual Zephyr threads.
executor-zephyr = [
  "dep:embassy-executor",
]

# Enables async support in various drivers.
async-drivers = [
  "dep:embassy-sync",
]
